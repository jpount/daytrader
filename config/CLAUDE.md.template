# CLAUDE.md

This file provides guidance to Claude Code when working with code in this repository.

## Project Overview

**Application Name:** [To be filled after analysis]
**Business Domain:** [To be filled after analysis]
**Technology Stack:** [To be filled after analysis]
**Architecture Style:** [To be filled after analysis]

### Purpose
[Brief description of what the application does, its main users, and business value]

### Key Features
- [Major feature 1]
- [Major feature 2]
- [Major feature 3]

## Architecture

### High-Level Architecture
[Description of overall system architecture, main components, and their interactions]

### Module Structure
```
[Module hierarchy will be documented here]
```

### Key Components
| Component | Type | Responsibility | Location |
|-----------|------|----------------|----------|
| [Component name] | [Controller/Service/Repository] | [What it does] | [Path] |

### Design Patterns Used
- **Pattern Name:** Where and why it's used
- **Pattern Name:** Where and why it's used

## Common Development Commands

### Building the Application
```bash
# Primary build command
[build command]

# Build with tests
[test command]

# Build for production
[production build]
```

### Running the Application
```bash
# Development mode
[dev run command]

# Production mode
[prod run command]

# Debug mode
[debug command]
```

### Database Operations
```bash
# Initialize database
[db init command]

# Run migrations
[migration command]

# Seed data
[seed command]
```

### Testing
```bash
# Unit tests
[unit test command]

# Integration tests
[integration test command]

# Full test suite
[full test command]
```

## Key Patterns and Conventions

### Code Organization
- **Package/Namespace Structure:** [How code is organized]
- **File Naming:** [Naming conventions used]
- **Component Organization:** [How components are structured]

### Coding Standards
- **Language Version:** [Version used]
- **Style Guide:** [Which style guide is followed]
- **Linting Rules:** [Key linting configurations]

### Data Access Patterns
- **ORM/Data Access:** [Technology used]
- **Transaction Management:** [How transactions are handled]
- **Query Patterns:** [Common query patterns]

### API Conventions
- **Endpoint Naming:** [REST/GraphQL conventions]
- **Request/Response Format:** [JSON/XML, standard structures]
- **Error Handling:** [How errors are returned]

### Security Patterns
- **Authentication:** [Method used]
- **Authorization:** [How permissions are handled]
- **Data Validation:** [Validation approach]

## Important Notes

### Critical Business Logic
- **Core Domain Logic:** Located in [path]
- **Business Rules:** Implemented in [path]
- **Workflow Orchestration:** Found in [path]

### Performance Considerations
- **Caching Strategy:** [What's cached and where]
- **Database Indexes:** [Critical indexes]
- **Async Operations:** [Where async is used]
- **Resource Pooling:** [Connection pools, thread pools]

### Security Considerations
- **Sensitive Data:** [How it's handled]
- **Authentication Flow:** [Key files involved]
- **API Security:** [Protection mechanisms]
- **Known Vulnerabilities:** [If any, and mitigation]

### Configuration
- **Environment Variables:** [Key variables needed]
- **Configuration Files:** [Important config files]
- **Feature Flags:** [If used, where configured]
- **Secrets Management:** [How secrets are handled]

### Deployment
- **Deployment Model:** [How it's deployed]
- **Infrastructure Requirements:** [What's needed]
- **External Dependencies:** [Services it depends on]
- **Monitoring:** [How it's monitored]

### Known Issues and Limitations
- **Technical Debt:** [Major items]
- **Performance Bottlenecks:** [Known issues]
- **Scalability Limits:** [Current limitations]
- **Planned Improvements:** [What's on the roadmap]

### Development Tips
- **Local Setup Gotchas:** [Common setup issues]
- **Debugging Tips:** [Helpful debugging approaches]
- **Testing Strategies:** [Best practices for this codebase]
- **Documentation:** [Where to find more docs]

## Modernization Context

### Current State Assessment
- **Technology Currency:** [How up-to-date]
- **Maintenance Burden:** [High/Medium/Low]
- **Technical Debt Level:** [High/Medium/Low]

### Recommended Migration Path
- **Target Stack:** [Recommended technologies]
- **Migration Strategy:** [Approach recommended]
- **Priority Areas:** [What to migrate first]

### Migration Considerations
- **Breaking Changes:** [What will change]
- **Data Migration:** [Special considerations]
- **Integration Points:** [What needs updating]
- **Training Needs:** [New skills required]

---

*This file is continuously updated as the codebase evolves. Last update: [Date]*