erDiagram
    AccountDataBean ||--o{ OrderDataBean : "account owns orders"
    AccountDataBean ||--o{ HoldingDataBean : "account owns holdings"
    AccountDataBean ||--|| AccountProfileDataBean : "account has profile"
    QuoteDataBean ||--o{ OrderDataBean : "quote referenced in orders"
    QuoteDataBean ||--o{ HoldingDataBean : "quote referenced in holdings"
    OrderDataBean ||--o| HoldingDataBean : "order may create holding"

    AccountDataBean {
        Integer accountID PK "Generated ID @TableGenerator"
        int loginCount "Login attempts counter"
        int logoutCount "Logout counter"
        Date lastLogin "@Temporal(TIMESTAMP)"
        Date creationDate "@Temporal(TIMESTAMP)"
        BigDecimal balance "Current account balance"
        BigDecimal openBalance "Initial account balance"
        String profileID "@Transient helper field"
    }

    AccountProfileDataBean {
        String userID PK "User identifier"
        String passwd "Encrypted password"
        String fullName "User full name"
        String address "User address"
        String email "Email address"
        String creditCard "Credit card number"
    }

    HoldingDataBean {
        Integer holdingID PK "Generated ID @TableGenerator"
        double quantity "Number of shares held"
        BigDecimal purchasePrice "Price at purchase"
        Date purchaseDate "@Temporal(TIMESTAMP)"
        String quoteID "@Transient helper field"
        Integer accountId FK "References AccountDataBean"
        String symbol FK "References QuoteDataBean"
    }

    OrderDataBean {
        Integer orderID PK "Generated ID @TableGenerator"
        String orderType "buy/sell indicator"
        String orderStatus "open/processing/completed/closed/cancelled"
        Date openDate "@Temporal(TIMESTAMP) order creation"
        Date completionDate "@Temporal(TIMESTAMP) order completion"
        double quantity "Number of shares"
        BigDecimal price "Order price"
        BigDecimal orderFee "Transaction fee"
        Integer accountId FK "References AccountDataBean"
        String symbol FK "References QuoteDataBean"
        Integer holdingId FK "References HoldingDataBean (optional)"
    }

    QuoteDataBean {
        String symbol PK "Stock symbol"
        String companyName "Company name"
        double volume "Trading volume"
        BigDecimal price "Current price"
        BigDecimal open1 "Opening price"
        BigDecimal low "Daily low"
        BigDecimal high "Daily high"
        double change1 "Price change"
    }

    PersistenceUnit {
        String name "daytrader"
        String transaction_type "JTA"
        String jta_data_source "jdbc/TradeDataSource"
        String non_jta_data_source "jdbc/NoTxTradeDataSource"
        boolean exclude_unlisted_classes "true"
    }

    KeyGeneration {
        String table_name "KEYGENEJB"
        String pk_column "KEYNAME"
        String value_column "KEYVAL"
        int allocation_size "1000"
        String account_key "account"
        String holding_key "holding"
        String order_key "order"
    }

    %% Configuration relationships
    PersistenceUnit ||--o{ AccountDataBean : "manages"
    PersistenceUnit ||--o{ AccountProfileDataBean : "manages"  
    PersistenceUnit ||--o{ HoldingDataBean : "manages"
    PersistenceUnit ||--o{ OrderDataBean : "manages"
    PersistenceUnit ||--o{ QuoteDataBean : "manages"
    KeyGeneration ||--o{ AccountDataBean : "generates IDs for"
    KeyGeneration ||--o{ HoldingDataBean : "generates IDs for"
    KeyGeneration ||--o{ OrderDataBean : "generates IDs for"