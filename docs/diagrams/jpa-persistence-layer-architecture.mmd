graph TB
    subgraph "JPA Persistence Layer Architecture"
        subgraph "Persistence Unit Configuration"
            PU["Persistence Unit: daytrader<br/>- JTA transaction type<br/>- Two data sources<br/>- Explicit class listing"]
            JTADS["JTA Data Source<br/>jdbc/TradeDataSource<br/>- Transactional operations"]
            NJTADS["Non-JTA Data Source<br/>jdbc/NoTxTradeDataSource<br/>- Non-transactional queries"]
        end

        subgraph "Entity Management"
            EM["EntityManager<br/>@PersistenceContext<br/>- Container-managed<br/>- Transaction-scoped"]
            PC["Persistence Context<br/>- Entity lifecycle<br/>- Dirty checking<br/>- L1 cache"]
        end

        subgraph "JPA Entities"
            subgraph "Core Domain Entities"
                ADB["AccountDataBean<br/>@Entity(accountejb)<br/>@Table(accountejb)<br/>- @Id: accountID<br/>- @TableGenerator"]
                APDB["AccountProfileDataBean<br/>@Entity(accountprofileejb)<br/>@Table(accountprofileejb)<br/>- @Id: userID"]
                HDB["HoldingDataBean<br/>@Entity(holdingejb)<br/>@Table(holdingejb)<br/>- @Id: holdingID<br/>- @TableGenerator"]
                ODB["OrderDataBean<br/>@Entity(orderejb)<br/>@Table(orderejb)<br/>- @Id: orderID<br/>- @TableGenerator"]
                QDB["QuoteDataBean<br/>@Entity(quoteejb)<br/>@Table(quoteejb)<br/>- @Id: symbol"]
            end

            subgraph "Support Entities"
                KG["Key Generation Table<br/>KEYGENEJB<br/>- Centralized ID generation<br/>- Allocation size: 1000"]
                MSDB["MarketSummaryDataBean<br/>- Non-persistent<br/>- Calculated values<br/>- Market statistics"]
                RSDB["RunStatsDataBean<br/>- Non-persistent<br/>- Benchmark metrics"]
            end
        end

        subgraph "Relationship Mappings"
            subgraph "One-to-One Relationships"
                OneToOne["Account ←→ AccountProfile<br/>@OneToOne(fetch=LAZY)<br/>@JoinColumn(PROFILE_USERID)<br/>Bidirectional mapping"]
            end

            subgraph "One-to-Many Relationships"
                OneToMany1["Account → Orders<br/>@OneToMany(mappedBy=account)<br/>fetch=LAZY<br/>Cascade operations"]
                OneToMany2["Account → Holdings<br/>@OneToMany(mappedBy=account)<br/>fetch=LAZY<br/>Portfolio management"]
            end

            subgraph "Many-to-One Relationships"
                ManyToOne1["Order → Account<br/>@ManyToOne(fetch=LAZY)<br/>@JoinColumn(ACCOUNT_ACCOUNTID)"]
                ManyToOne2["Order → Quote<br/>@ManyToOne(fetch=EAGER)<br/>@JoinColumn(QUOTE_SYMBOL)"]
                ManyToOne3["Holding → Account<br/>@ManyToOne(fetch=LAZY)<br/>@JoinColumn(ACCOUNT_ACCOUNTID)"]
                ManyToOne4["Holding → Quote<br/>@ManyToOne(fetch=EAGER)<br/>@JoinColumn(QUOTE_SYMBOL)"]
                ManyToOne5["Order → Holding<br/>@OneToOne(fetch=LAZY)<br/>@JoinColumn(HOLDING_HOLDINGID)<br/>Optional relationship"]
            end
        end

        subgraph "Named Queries"
            AccountQueries["AccountDataBean Queries:<br/>- findByAccountid<br/>- findByAccountid_eager<br/>- findByAccountid_eagerholdings<br/>- findByBalance, findByLogincount"]
            HoldingQueries["HoldingDataBean Queries:<br/>- holdingsByUserID<br/>- findByHoldingid<br/>- findByQuantity, findByPurchasedate"]
            OrderQueries["OrderDataBean Queries:<br/>- closedOrders<br/>- completeClosedOrders<br/>- findByAccountAccountid<br/>- findByQuoteSymbol"]
            QuoteQueries["QuoteDataBean Queries:<br/>- allQuotes<br/>- quotesByChange<br/>- quoteForUpdate (Native SQL)<br/>- findBySymbol, findByPrice"]
        end

        subgraph "Transaction Management"
            JTA["JTA Transaction Manager<br/>- Container-managed<br/>- Distributed transactions<br/>- Two-phase commit"]
            TM["Transaction Context<br/>- REQUIRED semantics<br/>- Automatic rollback<br/>- Resource coordination"]
        end

        subgraph "Data Access Patterns"
            DAO1["Entity Access Patterns:<br/>- Direct EntityManager<br/>- JPQL queries<br/>- Native SQL for locking"]
            DAO2["Fetch Strategies:<br/>- LAZY: Most relationships<br/>- EAGER: Quote references<br/>- JOIN FETCH: Optimizations"]
            DAO3["Performance Optimizations:<br/>- Bulk operations<br/>- Named queries<br/>- Query hints<br/>- FOR UPDATE locking"]
        end
    end

    %% Persistence layer dependencies
    PU --> JTADS
    PU --> NJTADS
    PU --> ADB
    PU --> APDB
    PU --> HDB
    PU --> ODB
    PU --> QDB
    
    EM --> PC
    EM --> PU
    EM --> JTA
    
    PC --> ADB
    PC --> APDB
    PC --> HDB
    PC --> ODB
    PC --> QDB
    
    %% Entity relationships
    ADB --> OneToOne
    ADB --> OneToMany1
    ADB --> OneToMany2
    
    HDB --> ManyToOne3
    HDB --> ManyToOne4
    ODB --> ManyToOne1
    ODB --> ManyToOne2
    ODB --> ManyToOne5
    
    %% Query dependencies
    ADB --> AccountQueries
    HDB --> HoldingQueries
    ODB --> OrderQueries
    QDB --> QuoteQueries
    
    %% Key generation
    ADB --> KG
    HDB --> KG
    ODB --> KG
    
    %% Transaction management
    EM --> TM
    JTA --> TM
    
    %% Data access patterns
    EM --> DAO1
    EM --> DAO2
    EM --> DAO3

    classDef entity fill:#E8F5E8,stroke:#388E3C,stroke-width:2px
    classDef relationship fill:#FFF3E0,stroke:#F57C00,stroke-width:2px
    classDef persistence fill:#E0F2F1,stroke:#00796B,stroke-width:2px
    classDef transaction fill:#F3E5F5,stroke:#7B1FA2,stroke-width:2px
    classDef query fill:#E8EAF6,stroke:#3F51B5,stroke-width:2px
    classDef support fill:#F5F5F5,stroke:#616161,stroke-width:2px
    classDef config fill:#FFF8E1,stroke:#FBC02D,stroke-width:2px

    class ADB,APDB,HDB,ODB,QDB entity
    class OneToOne,OneToMany1,OneToMany2,ManyToOne1,ManyToOne2,ManyToOne3,ManyToOne4,ManyToOne5 relationship
    class PU,EM,PC,JTADS,NJTADS persistence
    class JTA,TM transaction
    class AccountQueries,HoldingQueries,OrderQueries,QuoteQueries query
    class KG,MSDB,RSDB support
    class DAO1,DAO2,DAO3 config